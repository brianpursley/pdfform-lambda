const assert = require('assert')
const sut = require('../index')
const fs = require('fs');
const nock = require("nock");

describe('index', function() {
    const testPdf = fs.readFileSync('test/test.pdf')

    describe('listFields', function() {
        const expected = {
            isBase64Encoded: false,
            statusCode: 200,
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                Field1: [{type: 'string'}],
                Field2: [{type: 'string'}],
                CheckBox1: [{type: 'boolean'}],
                CheckBox2: [{type: 'boolean'}]
            })
        }

        it('should list the fields of a fillable pdf file specified as an array', async function() {
            const request = {
                body: JSON.stringify({
                    pdf: Array.from(testPdf)
                })
            }
            const actual = await sut.listFields(request)
            assert.deepStrictEqual(actual, expected)
        })

        it('should list the fields of a fillable pdf file specified as a URL', async function() {
            nock('https://example.com').get('/test.pdf').reply(200, testPdf)
            const request = {
                body: JSON.stringify({
                    pdf: 'https://example.com/test.pdf'
                })
            }
            const actual = await sut.listFields(request)
            assert.deepStrictEqual(actual, expected)
        })
    })

    describe('transform', function () {
        const expected = {
            isBase64Encoded: true,
            statusCode: 200,
            headers: { 'Content-Type': 'application/pdf' },
            body: ''
        }

        const fields = {
            Field1: ['value1'],
            Field2: ['value2'],
            CheckBox1: [1],
            CheckBox2: [1]
        }

        it('should fill a fillable pdf specified as an array', async function() {
            const request = {
                body: JSON.stringify({
                    pdf: Array.from(testPdf),
                    fields: fields
                })
            }
            const actual = await sut.transform(request)
            fs.writeFileSync('/tmp/output.pdf', Buffer.from(actual.body, 'base64').toString('binary'))
            assert.deepStrictEqual(actual, expected)
        })

        it('should fill a fillable pdf specified as a URL', async function() {
            nock('https://example.com').get('/test.pdf').reply(200, testPdf)
            const request = {
                body: JSON.stringify({
                    pdf: 'https://example.com/test.pdf',
                    fields: fields
                })
            }
            const actual = await sut.transform(request)
            fs.writeFileSync('/tmp/output.pdf', Buffer.from(actual.body, 'base64').toString('binary'))
            assert.deepStrictEqual(actual, expected)
        })
    })
})